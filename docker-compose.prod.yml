version: "3"

services:
  talkootunkki:
    build: .
    container_name: talkootunkki
    restart: always
    depends_on:
      - postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TG_BOT_API_TOKEN: ${TG_BOT_API_TOKEN}
      WS_EVENT_BROADCAST_INTERVAL: ${WS_EVENT_BROADCAST_INTERVAL}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      GOOGLE_SHEETS_ID: ${GOOGLE_SHEETS_ID}
      GOOGLE_SERVICE_ACCOUNT_EMAIL: ${GOOGLE_SERVICE_ACCOUNT_EMAIL}
      GOOGLE_PRIVATE_KEY: ${GOOGLE_PRIVATE_KEY}
      VITE_TELEGRAM_GROUP_LINK: ${VITE_TELEGRAM_GROUP_LINK}
      PORT: ${BACKEND_PORT}
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    container_name: talkootunkki_postgres
    restart: always
    environment:
      POSTGRES_DB: talkoot
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    image: nginx:mainline-alpine
    container_name: talkootunkki_nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/templates/default.conf.template
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
      - web-root:/var/www/html
    depends_on:
      - talkootunkki
    networks:
      - app-network
    ports:
      - 80:80
      - 443:443
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    command: /bin/sh -c "envsubst '\$DOMAIN_NAME' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  certbot:
    image: certbot/certbot
    container_name: talkootunkki_certbot
    restart: always
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    command: >
      renew
        --webroot
        --webroot-path=/var/www/html
        --quiet
        --agree-tos
        --no-eff-email
        --deploy-hook 'docker kill --signal=HUP talkootunkki_nginx'

#   adminer:
#     image: adminer
#     container_name: talkootunkki_adminer
#     restart: always
#     networks:
#       - app-network

volumes:
  postgres_data:
  certbot-etc:
  certbot-var:
  web-root:
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: ./nginx
      o: bind

networks:
  app-network:
    driver: bridge